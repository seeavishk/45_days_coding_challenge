//{ Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function template in C++

class Solution {
      bool ifPossible(int n, int arr[], int m,int mid)
    {
        int studentCount=1;
        int pagesCount=0;
        for(int i=0;i<n;i++){
            if(pagesCount+arr[i]<=mid)
            {
                pagesCount+=arr[i];
            }
            else
            {
                studentCount++;
                if(studentCount>m || arr[i]>mid)
                {
                    return false;
                }
                pagesCount=arr[i];
            }
        }
        return true;
        
    }
  public:
    // Function to find minimum number of pages.
    long long findPages(int n, int arr[], int m) {
        // code here
        int start=0;
        int sum=0;
        in ans=-1;
        for(int i=0;i<n;i++){
            sum+=arr[i];
        }
        int end=sum;
        int mid=start+(end-start)/2;
        while(start<=end){
            if(m>n){
                return ans;
            }
            else(ispossible(n,arr,m,mid)){
                ans=mid;
                end=mid-1;
            }
            else{
                start=mid+1;
            }
            mid=start+(end-start)/2;
        }
        return ans;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int A[n];
        for (int i = 0; i < n; i++) {
            cin >> A[i];
        }
        int m;
        cin >> m;
        Solution ob;
        cout << ob.findPages(n, A, m) << endl;
    }
    return 0;
}

// } Driver Code Ends
